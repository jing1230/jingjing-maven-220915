<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!--配置外部属性文件jdbc.properties的位置-->
    <properties resource="jdbc.properties"/>

    <!-- 在全局范围内对Mybatis进行配置-->
    <settings>
        <!-- 驼峰式命名规则：单词_单词，首字母小写-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>

    <!-- environments表示配置Mybatis的开发环境，可以配置多个环境，在众多具体环境中，使用default属性指定实际运行时使用的环境。default属性的取值是environment标签的id属性的值。 -->
    <environments default="development">
        <!-- environment表示配置Mybatis的一个具体的环境 -->
        <environment id="development">

            <!-- Mybatis的内置的事务管理器 -->
            <transactionManager type="JDBC"/>

            <!-- 配置数据源 -->
            <dataSource type="POOLED">

               <!-- &lt;!&ndash; 建立数据库连接的具体信息 &ndash;&gt;
                <property name="driver" value="com.mysql.jdbc.Driver"/>
                &lt;!&ndash;知道是编码的问题，而且是服务器端编码与数据库编码不匹配的问题，
                所以先查看数据库的字符集查看数据库字符集
                localhost:3306/mybatis-example 后加上 ?characterEncoding=utf8  &ndash;&gt;
                <property name="url" value="jdbc:mysql://localhost:3306/mybatis-example?characterEncoding=utf8"/>
                <property name="username" value="root"/>
                <property name="password" value="123456"/>
                -->

                <!-- 建立数据库连接的具体信息 -->
                <property name="driver" value="${wechat.dev.driver}"/>
                <!--知道是编码的问题，而且是服务器端编码与数据库编码不匹配的问题，
                所以先查看数据库的字符集查看数据库字符集
                localhost:3306/mybatis-example 后加上 ?characterEncoding=utf8-->
                <property name="url" value="${wechat.dev.url}"/>
                <property name="username" value="${wechat.dev.username}"/>
                <property name="password" value="${wechat.dev.password}"/>
            </dataSource>
        </environment>
    </environments>

    <mappers>
        <!-- Mapper注册：指定Mybatis映射文件的具体位置 -->
        <!-- mapper标签：配置一个具体的Mapper映射文件 -->
        <!-- resource属性：指定Mapper映射文件的实际存储位置，这里需要使用一个以类路径根目录为基准的相对路径 -->
        <!--    对Maven工程的目录结构来说，resources目录下的内容会直接放入类路径，所以这里我们可以以resources目录为基准 -->

        <!-- /开头是绝对路径，没有就是相对路径  以类路径（也可认为resources路径）为基准-->
        <!-- web应用部署到服务器上运行时，类路径其实是：WEB-INF目录下的classes目录-->
        <mapper resource="mappers/EmployeeMapper.xml"/>
        <mapper resource="mappers/OrderMapper.xml"/>
    </mappers>
</configuration>



